{"version":3,"file":"commons.bundle.js","mappings":";;;;;;;;;;AAAA;;;;;;;;;;;;;;;ACAO;;;;;;;;;;;;;;;ACAM;;AAEN;AACP,sCAAsC;AACtC,oCAAoC,uBAAuB;AAC3D;AACA;AACA,gCAAgC;AAChC,MAAM;AACN;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,oCAAoC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,QAAQ,oCAAoC;AAC5C;AACA;AACA;;AAEA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;ACtCqC;AACD;;AAE7B;AACP;AACA,oBAAoB,6CAAI;AACxB;;AAEA;AACA,sCAAsC,8CAAM,CAAC;AAC7C;AACA;;AAEA;AACA,uCAAuC,8CAAM,CAAC;AAC9C;AACA;;AAEA;AACA,8BAA8B,8CAAM,CAAC,YAAY,GAAG;AACpD;AACA","sources":["webpack:///../styles.css?ba32","webpack:///./constants.js","webpack:///./http.class.js","webpack:///./product-service.class.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport {};","export const SERVER = \"http://arturober.com:5005\";\n","\"use strict\";\n\nexport class Http {\n  async ajax(method, url, headers = {}, body = null) {\n    const resp = await fetch(url, { method, headers, body });\n    if (!resp.ok) throw new Error(resp.statusText);\n    if (resp.status != 204) {\n      return await resp.json(); // promise\n    } else {\n      return null;\n    }\n  }\n\n  get(url) {\n    return this.ajax(\"GET\", url);\n  }\n\n  post(url, data) {\n    return this.ajax(\n      \"POST\",\n      url,\n      { \"Content-Type\": \"application/json\" },\n      JSON.stringify(data)\n    );\n  }\n\n  put(url, data) {\n    return this.ajax(\n      \"PUT\",\n      url,\n      { \"Content-Type\": \"application/json\" },\n      JSON.stringify(data)\n    );\n  }\n\n  delete(url) {\n    return this.ajax(\"DELETE\", url);\n  }\n}\n","import { SERVER } from \"./constants\";\nimport { Http } from \"./http.class\";\n\nexport class ProductService {\n  constructor() {\n    this.http = new Http();\n  }\n\n  async getProducts() {\n    let resp = await this.http.get(`${SERVER}/products`);\n    return resp.products;\n  }\n\n  async addProduct(product) {\n    let resp = await this.http.post(`${SERVER}/products`, product);\n    return resp.product;\n  }\n\n  async deleteProduct(id) {\n    await this.http.delete(`${SERVER}/products/${id}`);\n  }\n}"],"names":[],"sourceRoot":""}